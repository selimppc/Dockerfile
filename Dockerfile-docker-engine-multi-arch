# Use a multi-platform base image
FROM docker:20.10.24

# Install required packages
RUN apk add --no-cache \
    python3 \
    py3-pip \
    build-base \
    postgresql-client \
    docker-cli \
    curl \
    git \
    make \
    libffi-dev \
    openssl-dev \
    wget \
    bash \
    jq

# Install Docker Compose (adjust version as needed)
RUN curl -L "https://github.com/docker/compose/releases/download/1.26.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose \
    && chmod +x /usr/local/bin/docker-compose

# Create and activate a virtual environment for Python packages
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Install AWS CLI and other Python packages inside the virtual environment
RUN pip install --upgrade pip \
    && pip install awscli \
    && pip install virtualenv \
    && pip install yasha

# Install kubectl (multi-arch compatible)
RUN ARCH=$(uname -m) && \
    if [ "$ARCH" = "x86_64" ]; then ARCH="amd64"; fi && \
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/$ARCH/kubectl" && \
    chmod +x kubectl && mv kubectl /usr/local/bin/

# Set environment variables
ENV LANG=C.UTF-8 \
    PATH="/usr/local/bin:${PATH}"

CMD ["bash"]
